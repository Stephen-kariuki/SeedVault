# Generated by Django 4.1.13 on 2024-07-17 08:52

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('mydjangoapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminAllUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100, unique=True)),
                ('UserName', models.CharField(max_length=100)),
                ('UserEmail', models.EmailField(max_length=100)),
                ('UserPassword', models.CharField(max_length=100)),
                ('SubscriptionStatus', models.CharField(max_length=50)),
                ('Location', models.CharField(max_length=255)),
                ('Age', models.IntegerField()),
                ('Gender', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='AdminFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100)),
                ('Feedback', models.TextField()),
                ('Reports', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AdminSeedCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('Category', models.CharField(max_length=50)),
                ('SeedType', models.CharField(max_length=50)),
                ('SeedName', models.CharField(max_length=100)),
                ('OptimalTemperature', models.CharField(max_length=50)),
                ('LowestTemp', models.CharField(max_length=50)),
                ('HighestTemp', models.CharField(max_length=50)),
                ('OptimalDampness', models.FloatField()),
                ('LowestDampness', models.FloatField()),
                ('HighestDampness', models.FloatField()),
                ('OptimalLight', models.FloatField()),
                ('LowestLight', models.FloatField()),
                ('HighestLight', models.FloatField()),
                ('BestPlantingWeather', models.CharField(max_length=50)),
                ('BestPlantingMonth', models.CharField(max_length=50)),
                ('AreaMostPlanted', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AdminSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100)),
                ('UserName', models.CharField(max_length=100)),
                ('UserEmail', models.EmailField(max_length=100)),
                ('SubscriptionStatus', models.CharField(max_length=50)),
                ('Premium', models.CharField(max_length=10)),
                ('Payment', models.CharField(max_length=50)),
                ('Billing', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DampnessAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('SeedCategory', models.CharField(max_length=50)),
                ('SeedName', models.CharField(max_length=100)),
                ('CurrentDampness', models.FloatField()),
                ('OptimalDampness', models.FloatField()),
                ('LowDampnessLimit', models.FloatField()),
                ('HighDampnessLimit', models.FloatField()),
                ('MorningDampness', models.FloatField()),
                ('NoonDampness', models.FloatField()),
                ('EveningDampness', models.FloatField()),
                ('NightDampness', models.FloatField()),
                ('DampnessToday', models.FloatField()),
                ('DampnessYesterday', models.FloatField()),
                ('DampnessLastWeek', models.FloatField()),
                ('DampnessLastMonth', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.CharField(max_length=50)),
                ('Event', models.CharField(max_length=100)),
                ('EventLocation', models.CharField(max_length=255)),
                ('AreasWithEvents', models.CharField(max_length=255)),
                ('SeedToPlant', models.CharField(max_length=100)),
                ('SeedID', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LightExposureAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('SeedCategory', models.CharField(max_length=50)),
                ('SeedName', models.CharField(max_length=100)),
                ('CurrentLight', models.FloatField()),
                ('OptimalLight', models.FloatField()),
                ('LowLightLimit', models.FloatField()),
                ('HighLightLimit', models.FloatField()),
                ('MorningLight', models.FloatField()),
                ('NoonLight', models.FloatField()),
                ('EveningLight', models.FloatField()),
                ('NightLight', models.FloatField()),
                ('LightToday', models.FloatField()),
                ('LightYesterday', models.FloatField()),
                ('LightLastWeek', models.FloatField()),
                ('LightLastMonth', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Monitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('CurrentTemperature', models.CharField(max_length=100)),
                ('OptimalTemperature', models.CharField(max_length=100)),
                ('LowTemperatureLimit', models.CharField(max_length=100)),
                ('HighTemperatureLimit', models.CharField(max_length=100)),
                ('CurrentDampness', models.FloatField()),
                ('OptimalDampness', models.FloatField()),
                ('LowDampnessLimit', models.FloatField()),
                ('HighDampnessLimit', models.FloatField()),
                ('CurrentLight', models.FloatField()),
                ('OptimalLight', models.FloatField()),
                ('LowLightLimit', models.FloatField()),
                ('HighLightLimit', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='seeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('SeedCategory', models.CharField(max_length=255)),
                ('SeedType', models.CharField(max_length=255)),
                ('DateBought', models.DateTimeField(default=django.utils.timezone.now)),
                ('ExpiryDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('PlantingDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('TemperatureRequirement', models.CharField(max_length=255)),
                ('LightRequirement', models.IntegerField()),
                ('MoistureRequirement', models.IntegerField()),
                ('SeedQuantity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PersonID', models.CharField(max_length=50)),
                ('DateAccessed', models.CharField(max_length=50)),
                ('TimeAccessed', models.CharField(max_length=50)),
                ('RestrictedAreas', models.CharField(max_length=255)),
                ('PlaceAccessed', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('WarehouseName', models.CharField(max_length=100)),
                ('WarehouseNo', models.CharField(blank=True, max_length=100, null=True)),
                ('ShelfNo', models.CharField(blank=True, max_length=100, null=True)),
                ('UnitNo', models.CharField(blank=True, max_length=100, null=True)),
                ('VaultName', models.CharField(max_length=100)),
                ('VaultNo', models.CharField(blank=True, max_length=100, null=True)),
                ('SeedBankName', models.CharField(max_length=100)),
                ('SeedBankNo', models.CharField(blank=True, max_length=100, null=True)),
                ('SeedCaseNo', models.CharField(blank=True, max_length=100, null=True)),
                ('CaseSectionNo', models.CharField(blank=True, max_length=100, null=True)),
                ('SeedBoxNo', models.CharField(blank=True, max_length=100, null=True)),
                ('BoxUnitNo', models.CharField(blank=True, max_length=100, null=True)),
                ('SeedAlbumNo', models.CharField(blank=True, max_length=100, null=True)),
                ('PageNo', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TemperatureAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SeedID', models.CharField(max_length=100)),
                ('SeedCategory', models.CharField(max_length=50)),
                ('SeedName', models.CharField(max_length=100)),
                ('CurrentTemperature', models.CharField(max_length=50)),
                ('OptimalTemperature', models.CharField(max_length=50)),
                ('LowTemperatureLimit', models.CharField(max_length=50)),
                ('HighTemperatureLimit', models.CharField(max_length=50)),
                ('MorningTemperature', models.CharField(max_length=50)),
                ('NoonTemperature', models.CharField(max_length=50)),
                ('EveningTemperature', models.CharField(max_length=50)),
                ('NightTemperature', models.CharField(max_length=50)),
                ('TemperatureToday', models.CharField(max_length=50)),
                ('TemperatureYesterday', models.CharField(max_length=50)),
                ('TemperatureLastWeek', models.CharField(max_length=50)),
                ('TemperatureLastMonth', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserID', models.CharField(max_length=100, unique=True)),
                ('UserName', models.CharField(max_length=100)),
                ('UserEmail', models.EmailField(max_length=100)),
                ('UserPassword', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WeatherToday', models.CharField(max_length=50)),
                ('WeatherTomorrow', models.CharField(max_length=50)),
                ('WeatherNextWeek', models.CharField(max_length=50)),
                ('WeatherNextMonth', models.CharField(max_length=50)),
                ('SuitablePlant', models.CharField(max_length=100)),
                ('SunnyTemperature', models.CharField(max_length=50)),
                ('SunnyDampness', models.FloatField()),
                ('SunnyLight', models.FloatField()),
                ('RainyTemperature', models.CharField(max_length=50)),
                ('RainyDampness', models.FloatField()),
                ('RainyLight', models.FloatField()),
                ('CloudyTemperature', models.CharField(max_length=50)),
                ('CloudyDampness', models.FloatField()),
                ('CloudyLight', models.FloatField()),
                ('SeedID', models.CharField(max_length=100)),
                ('SuitabilityToSeed', models.CharField(max_length=50)),
                ('SeedToCheck', models.CharField(max_length=100)),
            ],
        ),
        migrations.DeleteModel(
            name='Seed',
        ),
    ]
